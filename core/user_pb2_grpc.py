# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import core.user_pb2 as user_pb2
import grpc


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateUser = channel.unary_unary(
            "/user_account.UserService/CreateUser",
            request_serializer=user_pb2.CreateUserRequest.SerializeToString,
            response_deserializer=user_pb2.TotalResponse.FromString,
        )
        self.UpdateUser = channel.unary_unary(
            "/user_account.UserService/UpdateUser",
            request_serializer=user_pb2.UpdateUserRequest.SerializeToString,
            response_deserializer=user_pb2.TotalResponse.FromString,
        )
        self.DeleteUser = channel.unary_unary(
            "/user_account.UserService/DeleteUser",
            request_serializer=user_pb2.DeleteUserRequest.SerializeToString,
            response_deserializer=user_pb2.TotalResponse.FromString,
        )
        self.VerifyUserWithDocs = channel.stream_unary(
            "/user_account.UserService/VerifyUserWithDocs",
            request_serializer=user_pb2.VerifyUserWithDocsRequest.SerializeToString,
            response_deserializer=user_pb2.TotalResponse.FromString,
        )
        self.LightVerifyUser = channel.unary_unary(
            "/user_account.UserService/LightVerifyUser",
            request_serializer=user_pb2.LightVerifyUserRequest.SerializeToString,
            response_deserializer=user_pb2.TotalResponse.FromString,
        )
        self.ChangeUserRole = channel.unary_unary(
            "/user_account.UserService/ChangeUserRole",
            request_serializer=user_pb2.ChangeUserRoleRequest.SerializeToString,
            response_deserializer=user_pb2.TotalResponse.FromString,
        )
        self.UserDataValidationByAdmin = channel.unary_unary(
            "/user_account.UserService/UserDataValidationByAdmin",
            request_serializer=user_pb2.UserDataValidationByAdminRequest.SerializeToString,
            response_deserializer=user_pb2.TotalResponse.FromString,
        )


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def VerifyUserWithDocs(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def LightVerifyUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ChangeUserRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UserDataValidationByAdmin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "CreateUser": grpc.unary_unary_rpc_method_handler(
            servicer.CreateUser,
            request_deserializer=user_pb2.CreateUserRequest.FromString,
            response_serializer=user_pb2.TotalResponse.SerializeToString,
        ),
        "UpdateUser": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateUser,
            request_deserializer=user_pb2.UpdateUserRequest.FromString,
            response_serializer=user_pb2.TotalResponse.SerializeToString,
        ),
        "DeleteUser": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteUser,
            request_deserializer=user_pb2.DeleteUserRequest.FromString,
            response_serializer=user_pb2.TotalResponse.SerializeToString,
        ),
        "VerifyUserWithDocs": grpc.stream_unary_rpc_method_handler(
            servicer.VerifyUserWithDocs,
            request_deserializer=user_pb2.VerifyUserWithDocsRequest.FromString,
            response_serializer=user_pb2.TotalResponse.SerializeToString,
        ),
        "LightVerifyUser": grpc.unary_unary_rpc_method_handler(
            servicer.LightVerifyUser,
            request_deserializer=user_pb2.LightVerifyUserRequest.FromString,
            response_serializer=user_pb2.TotalResponse.SerializeToString,
        ),
        "ChangeUserRole": grpc.unary_unary_rpc_method_handler(
            servicer.ChangeUserRole,
            request_deserializer=user_pb2.ChangeUserRoleRequest.FromString,
            response_serializer=user_pb2.TotalResponse.SerializeToString,
        ),
        "UserDataValidationByAdmin": grpc.unary_unary_rpc_method_handler(
            servicer.UserDataValidationByAdmin,
            request_deserializer=user_pb2.UserDataValidationByAdminRequest.FromString,
            response_serializer=user_pb2.TotalResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "user_account.UserService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_account.UserService/CreateUser",
            user_pb2.CreateUserRequest.SerializeToString,
            user_pb2.TotalResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UpdateUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_account.UserService/UpdateUser",
            user_pb2.UpdateUserRequest.SerializeToString,
            user_pb2.TotalResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def DeleteUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_account.UserService/DeleteUser",
            user_pb2.DeleteUserRequest.SerializeToString,
            user_pb2.TotalResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def VerifyUserWithDocs(
        request_iterator,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            "/user_account.UserService/VerifyUserWithDocs",
            user_pb2.VerifyUserWithDocsRequest.SerializeToString,
            user_pb2.TotalResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def LightVerifyUser(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_account.UserService/LightVerifyUser",
            user_pb2.LightVerifyUserRequest.SerializeToString,
            user_pb2.TotalResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ChangeUserRole(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_account.UserService/ChangeUserRole",
            user_pb2.ChangeUserRoleRequest.SerializeToString,
            user_pb2.TotalResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UserDataValidationByAdmin(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/user_account.UserService/UserDataValidationByAdmin",
            user_pb2.UserDataValidationByAdminRequest.SerializeToString,
            user_pb2.TotalResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
